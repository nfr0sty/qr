name: windows-build
on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller

      - name: Clean old spec/build/dist
        run: |
          if exist build rmdir /s /q build
          if exist dist rmdir /s /q dist
          if exist buildspec rmdir /s /q buildspec
          del /f /q *.spec 2>nul

      - name: Build EXE (no icon)
        run: |
          pyinstaller --noconsole --onefile --clean --specpath buildspec --name "QRMobile" app\app_gui.py

      - name: Show dist contents
        run: |
          if exist dist (dir dist /s) else (echo dist not found)

      - name: Upload EXE
        uses: actions/upload-artifact@v4
        with:
          name: QRMobile-exe
          path: dist/QRMobile.exe
          if-no-files-found: error

      - name: Install Inno Setup
        run: |
          choco install innosetup -y --no-progress

      - name: Build Installer (robust ISCC)
        working-directory: build_scripts
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
      
          # 1) Ищем ISCC в типовых путях
          $cands = @(
            'C:\Program Files (x86)\Inno Setup 6\ISCC.exe',
            'C:\Program Files\Inno Setup 6\ISCC.exe'
          )
          $iscc = $cands | Where-Object { Test-Path $_ } | Select-Object -First 1
          if (-not $iscc) { throw "ISCC not found. Tried: $($cands -join '; ')" }
          Write-Host "Using ISCC: $iscc"
      
          # 2) Проверяем, что installer.iss существует
          if (-not (Test-Path 'installer.iss')) { throw "installer.iss not found in $(Get-Location)" }
      
          # 3) Пытаемся тремя способами
          $ok = $false
      
          try {
            & $iscc 'installer.iss'
            if ($LASTEXITCODE -ne 0) { throw "ExitCode $LASTEXITCODE" }
            Write-Host "ISCC OK via pwsh call-operator (&)."
            $ok = $true
          } catch {
            Write-Warning "ISCC via (&) failed: $($_.Exception.Message)"
          }
      
          if (-not $ok) {
            try {
              $p = Start-Process -FilePath $iscc -ArgumentList 'installer.iss' -NoNewWindow -Wait -PassThru
              if ($p.ExitCode -ne 0) { throw "ExitCode $($p.ExitCode)" }
              Write-Host "ISCC OK via Start-Process."
              $ok = $true
            } catch {
              Write-Warning "ISCC via Start-Process failed: $($_.Exception.Message)"
            }
          }
      
          if (-not $ok) {
            try {
              cmd /c "`"$iscc`" installer.iss"
              if ($LASTEXITCODE -ne 0) { throw "ExitCode $LASTEXITCODE" }
              Write-Host "ISCC OK via cmd /c."
              $ok = $true
            } catch {
              Write-Error "ISCC via cmd /c failed: $($_.Exception.Message)"
            }
          }
      
          if (-not $ok) { throw "All ISCC invocation methods failed." }


      - name: Show Inno Output
        run: |
          if exist build_scripts\Output (dir build_scripts\Output /s) else (echo build_scripts\Output not found)

      - name: Upload Setup
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: QRMobile-Setup
          path: build_scripts\Output\QRMobile-Setup.exe
          if-no-files-found: warn
